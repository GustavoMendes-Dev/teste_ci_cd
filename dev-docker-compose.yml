version: "3.7"
services:
    # image project
    app_teste:
        build: 
            args: 
                user: ${APP_NAME}
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: app_teste
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on: 
            - redis
            - queue
        networks: 
            - app_teste_network
    
    # nginx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        ports: 
            - 80:80
        volumes: 
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks: 
            - app_teste_network

    # db mysql
    mysql:
        image: mysql:5.7.22
        restart: unless-stopped
        environment: 
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
        volumes: 
            - ./.docker/mysql/dbdata:/var/lib/mysql
        networks: 
            - app_teste_network

    # queue
    queue:
        build: 
            args: 
                user: ${APP_NAME}
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        restart: unless-stopped
        command: "php artisan queue:work"
        volumes: 
            - ./:/var/www
        depends_on: 
            - redis
        networks: 
            - app_teste_network

    # redis
    redis:
        image: redis:latest
        networks: 
            - app_teste_network

    adminer:
        image: phpmyadmin/phpmyadmin
        container_name: app_teste_phpmyadmin
        restart: unless-stopped
        tty: true
        ports:
          - "8080:80"
        environment:
          PMA_HOST: mysql
          UPLOAD_LIMIT: 300M
        depends_on:
          - mysql
        networks:
          - app_teste_network    

networks: 
    app_teste_network:
        driver: bridge